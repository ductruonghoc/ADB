//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ADB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QLNHAHANGEntities1 : DbContext
    {
        public QLNHAHANGEntities1()
            : base("name=QLNHAHANGEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BAN> BANs { get; set; }
        public virtual DbSet<BAN_BANAN> BAN_BANAN { get; set; }
        public virtual DbSet<BANAN> BANANs { get; set; }
        public virtual DbSet<BANAN_MONAN> BANAN_MONAN { get; set; }
        public virtual DbSet<BOPHAN> BOPHANs { get; set; }
        public virtual DbSet<BOPHAN_CHINHANH> BOPHAN_CHINHANH { get; set; }
        public virtual DbSet<CHINHANH> CHINHANHs { get; set; }
        public virtual DbSet<DANHGIADICHVU> DANHGIADICHVUs { get; set; }
        public virtual DbSet<HOADON> HOADONs { get; set; }
        public virtual DbSet<KHACHHANG> KHACHHANGs { get; set; }
        public virtual DbSet<KHOMONAN> KHOMONANs { get; set; }
        public virtual DbSet<KHUVUC> KHUVUCs { get; set; }
        public virtual DbSet<LICHSULAMVIEC> LICHSULAMVIECs { get; set; }
        public virtual DbSet<LOAITHE> LOAITHEs { get; set; }
        public virtual DbSet<LUONG> LUONGs { get; set; }
        public virtual DbSet<MONAN> MONANs { get; set; }
        public virtual DbSet<MUCTHUCDON> MUCTHUCDONs { get; set; }
        public virtual DbSet<NHANVIEN> NHANVIENs { get; set; }
        public virtual DbSet<PHIEUDAT> PHIEUDATs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<THETHANHVIEN> THETHANHVIENs { get; set; }
        public virtual DbSet<THUCDON> THUCDONs { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_LayDanhSachNhanVien_Result> sp_LayDanhSachNhanVien(Nullable<byte> maCN)
        {
            var maCNParameter = maCN.HasValue ?
                new ObjectParameter("MaCN", maCN) :
                new ObjectParameter("MaCN", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_LayDanhSachNhanVien_Result>("sp_LayDanhSachNhanVien", maCNParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_ThemChiNhanh(string maCN, string tenChiNhanh, Nullable<System.TimeSpan> thoiGianMo, Nullable<System.TimeSpan> thoiGianDong, string soDienThoai, string diaChi, Nullable<int> maKV, Nullable<bool> baiDoXeHoi, Nullable<bool> baiDoXeMay)
        {
            var maCNParameter = maCN != null ?
                new ObjectParameter("MaCN", maCN) :
                new ObjectParameter("MaCN", typeof(string));
    
            var tenChiNhanhParameter = tenChiNhanh != null ?
                new ObjectParameter("TenChiNhanh", tenChiNhanh) :
                new ObjectParameter("TenChiNhanh", typeof(string));
    
            var thoiGianMoParameter = thoiGianMo.HasValue ?
                new ObjectParameter("ThoiGianMo", thoiGianMo) :
                new ObjectParameter("ThoiGianMo", typeof(System.TimeSpan));
    
            var thoiGianDongParameter = thoiGianDong.HasValue ?
                new ObjectParameter("ThoiGianDong", thoiGianDong) :
                new ObjectParameter("ThoiGianDong", typeof(System.TimeSpan));
    
            var soDienThoaiParameter = soDienThoai != null ?
                new ObjectParameter("SoDienThoai", soDienThoai) :
                new ObjectParameter("SoDienThoai", typeof(string));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            var maKVParameter = maKV.HasValue ?
                new ObjectParameter("MaKV", maKV) :
                new ObjectParameter("MaKV", typeof(int));
    
            var baiDoXeHoiParameter = baiDoXeHoi.HasValue ?
                new ObjectParameter("BaiDoXeHoi", baiDoXeHoi) :
                new ObjectParameter("BaiDoXeHoi", typeof(bool));
    
            var baiDoXeMayParameter = baiDoXeMay.HasValue ?
                new ObjectParameter("BaiDoXeMay", baiDoXeMay) :
                new ObjectParameter("BaiDoXeMay", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ThemChiNhanh", maCNParameter, tenChiNhanhParameter, thoiGianMoParameter, thoiGianDongParameter, soDienThoaiParameter, diaChiParameter, maKVParameter, baiDoXeHoiParameter, baiDoXeMayParameter);
        }
    
        public virtual int sp_ThemTheThanhVien(Nullable<int> loaiThe, Nullable<int> diemTichLuy, Nullable<System.DateTime> ngayTao, Nullable<System.DateTime> ngayDatHangThe, Nullable<int> maKH, Nullable<int> nhanVienLapThe)
        {
            var loaiTheParameter = loaiThe.HasValue ?
                new ObjectParameter("LoaiThe", loaiThe) :
                new ObjectParameter("LoaiThe", typeof(int));
    
            var diemTichLuyParameter = diemTichLuy.HasValue ?
                new ObjectParameter("DiemTichLuy", diemTichLuy) :
                new ObjectParameter("DiemTichLuy", typeof(int));
    
            var ngayTaoParameter = ngayTao.HasValue ?
                new ObjectParameter("NgayTao", ngayTao) :
                new ObjectParameter("NgayTao", typeof(System.DateTime));
    
            var ngayDatHangTheParameter = ngayDatHangThe.HasValue ?
                new ObjectParameter("NgayDatHangThe", ngayDatHangThe) :
                new ObjectParameter("NgayDatHangThe", typeof(System.DateTime));
    
            var maKHParameter = maKH.HasValue ?
                new ObjectParameter("MaKH", maKH) :
                new ObjectParameter("MaKH", typeof(int));
    
            var nhanVienLapTheParameter = nhanVienLapThe.HasValue ?
                new ObjectParameter("NhanVienLapThe", nhanVienLapThe) :
                new ObjectParameter("NhanVienLapThe", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ThemTheThanhVien", loaiTheParameter, diemTichLuyParameter, ngayTaoParameter, ngayDatHangTheParameter, maKHParameter, nhanVienLapTheParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int str_LapHoaDon(Nullable<int> maBanAn, Nullable<System.DateTime> ngayTao, Nullable<int> maThe, Nullable<int> maNV, ObjectParameter soTien)
        {
            var maBanAnParameter = maBanAn.HasValue ?
                new ObjectParameter("MaBanAn", maBanAn) :
                new ObjectParameter("MaBanAn", typeof(int));
    
            var ngayTaoParameter = ngayTao.HasValue ?
                new ObjectParameter("NgayTao", ngayTao) :
                new ObjectParameter("NgayTao", typeof(System.DateTime));
    
            var maTheParameter = maThe.HasValue ?
                new ObjectParameter("MaThe", maThe) :
                new ObjectParameter("MaThe", typeof(int));
    
            var maNVParameter = maNV.HasValue ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("str_LapHoaDon", maBanAnParameter, ngayTaoParameter, maTheParameter, maNVParameter, soTien);
        }
    
        public virtual ObjectResult<str_LayThongTinMonAn_Result> str_LayThongTinMonAn(Nullable<byte> maCN)
        {
            var maCNParameter = maCN.HasValue ?
                new ObjectParameter("MaCN", maCN) :
                new ObjectParameter("MaCN", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<str_LayThongTinMonAn_Result>("str_LayThongTinMonAn", maCNParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> str_Login(Nullable<int> role, Nullable<int> id, string password)
        {
            var roleParameter = role.HasValue ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("str_Login", roleParameter, idParameter, passwordParameter);
        }
    }
}
